/*
     Copyright (c) 2022 SMIC             
     Filename:      RAM256_ff_1.98_0.lib
     IP code:       S018RF2P
     Version:       0.2.b
     CreateDate:    Oct 31, 2022        
                    
    Synopsys Technology Library for 2-PORT Register File
    SMIC 0.18um G Logic Process

    Configuration: -instname RAM256 -rows 64 -bits 24 -mux 4 
    Redundancy: Off
    Bit-Write: Off
*/

/* DISCLAIMER                                                                      */
/*                                                                                 */  
/*   SMIC hereby provides the quality information to you but makes no claims,      */
/* promises or guarantees about the accuracy, completeness, or adequacy of the     */
/* information herein. The information contained herein is provided on an "AS IS"  */
/* basis without any warranty, and SMIC assumes no obligation to provide support   */
/* of any kind or otherwise maintain the information.                              */  
/*   SMIC disclaims any representation that the information does not infringe any  */
/* intellectual property rights or proprietary rights of any third parties. SMIC   */
/* makes no other warranty, whether express, implied or statutory as to any        */
/* matter whatsoever, including but not limited to the accuracy or sufficiency of  */
/* any information or the merchantability and fitness for a particular purpose.    */
/* Neither SMIC nor any of its representatives shall be liable for any cause of    */
/* action incurred to connect to this service.                                     */  
/*                                                                                 */
/* STATEMENT OF USE AND CONFIDENTIALITY                                            */  
/*                                                                                 */  
/*   The following/attached material contains confidential and proprietary         */  
/* information of SMIC. This material is based upon information which SMIC         */  
/* considers reliable, but SMIC neither represents nor warrants that such          */
/* information is accurate or complete, and it must not be relied upon as such.    */
/* This information was prepared for informational purposes and is for the use     */
/* by SMIC's customer only. SMIC reserves the right to make changes in the         */  
/* information at any time without notice.                                         */  
/*   No part of this information may be reproduced, transmitted, transcribed,      */  
/* stored in a retrieval system, or translated into any human or computer          */ 
/* language, in any form or by any means, electronic, mechanical, magnetic,        */  
/* optical, chemical, manual, or otherwise, without the prior written consent of   */
/* SMIC. Any unauthorized use or disclosure of this material is strictly           */  
/* prohibited and may be unlawful. By accepting this material, the receiving       */  
/* party shall be deemed to have acknowledged, accepted, and agreed to be bound    */
/* by the foregoing limitations and restrictions. Thank you.                       */  
/*                                                                                 */  
library(RAM256_ff_1.98_0) {
	delay_model		: table_lookup;
	time_unit		: "1ns";
	voltage_unit		: "1V";
	current_unit		: "1mA";
	leakage_power_unit	: "1mW";
	nom_process		: 1;
	nom_temperature         : 0;
	nom_voltage		: 1.98;
	capacitive_load_unit	 (1,pf);

	pulling_resistance_unit	: "1kohm";

	/* additional header data */
	default_cell_leakage_power      : 0;
	default_fanout_load		: 1;
	default_inout_pin_cap		: 0.005;
	default_input_pin_cap		: 0.005;
	default_output_pin_cap		: 0.0;
	default_max_transition		: 1.500;

      /* default attributes */
      default_leakage_power_density : 0.0;
      slew_derate_from_library      : 1.000;
      slew_lower_threshold_pct_fall : 10.000;
      slew_upper_threshold_pct_fall : 90.000;
      slew_lower_threshold_pct_rise : 10.000;
      slew_upper_threshold_pct_rise : 90.000;
      input_threshold_pct_fall      : 50.000;
      input_threshold_pct_rise      : 50.000;
      output_threshold_pct_fall     : 50.000;
      output_threshold_pct_rise     : 50.000;

 	/* k-factors */
 	k_process_cell_fall             : 1;
 	k_process_cell_leakage_power    : 0;
 	k_process_cell_rise             : 1;
 	k_process_fall_transition       : 1;
 	k_process_hold_fall             : 1;
 	k_process_hold_rise             : 1;
 	k_process_internal_power        : 0;
 	k_process_min_pulse_width_high  : 1;
 	k_process_min_pulse_width_low   : 1;
 	k_process_pin_cap               : 0;
 	k_process_recovery_fall         : 1;
 	k_process_recovery_rise         : 1;
 	k_process_rise_transition       : 1;
 	k_process_setup_fall            : 1;
 	k_process_setup_rise            : 1;
 	k_process_wire_cap              : 0;
 	k_process_wire_res              : 0;
	k_temp_cell_fall                : 0.000;
	k_temp_cell_rise		: 0.000;
	k_temp_hold_fall                : 0.000;
	k_temp_hold_rise                : 0.000;
	k_temp_min_pulse_width_high     : 0.000;
	k_temp_min_pulse_width_low      : 0.000;
	k_temp_min_period               : 0.000;
	k_temp_rise_propagation         : 0.000;
	k_temp_fall_propagation         : 0.000;
	k_temp_rise_transition          : 0.0;
	k_temp_fall_transition          : 0.0;
	k_temp_recovery_fall            : 0.000;
	k_temp_recovery_rise            : 0.000;
	k_temp_setup_fall               : 0.000;
	k_temp_setup_rise               : 0.000;
	k_volt_cell_fall                : 0.000;
	k_volt_cell_rise                : 0.000;
	k_volt_hold_fall                : 0.000;
	k_volt_hold_rise                : 0.000;
	k_volt_min_pulse_width_high     : 0.000;
	k_volt_min_pulse_width_low      : 0.000;
	k_volt_min_period               : 0.000;
	k_volt_rise_propagation         : 0.000;
	k_volt_fall_propagation         : 0.000;
	k_volt_rise_transition	        : 0.0;
	k_volt_fall_transition	        : 0.0;
	k_volt_recovery_fall            : 0.000;
	k_volt_recovery_rise            : 0.000;
	k_volt_setup_fall               : 0.000;
	k_volt_setup_rise               : 0.000;


        operating_conditions(ff_1.98_0) {
		process	         : 1;
		temperature	 : 0;
		voltage	         : 1.98;
		tree_type	 : balanced_tree;
	}
        default_operating_conditions : ff_1.98_0;
	  wire_load("sample") {
		resistance	 : 1.6e-05;
		capacitance	 : 0.0002;
		area	 : 1.7;
  		slope	 : 500;
		fanout_length	 (1,500);
	}
        lu_table_template(RAM256_bist_mux_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        lu_table_template(RAM256_mux_mem_out_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        lu_table_template(RAM256_mem_out_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	  lu_table_template(RAM256_bist_mux_slew_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	  lu_table_template(RAM256_mem_out_slew_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	  lu_table_template(RAM256_clk_setup_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	  lu_table_template(RAM256_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        
     power_lut_template(RAM256_energy_template_clkslew_load) {
           variable_1 : input_transition_time;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        
     power_lut_template(RAM256_energy_template_sigslew_load) {
           variable_1 : input_transition_time;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
      power_lut_template(RAM256_energy_template_load) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
      power_lut_template(RAM256_energy_template_clkslew) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
      power_lut_template(RAM256_energy_template_sigslew) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
	library_features(report_delay_calculation);
	type (RAM256_DATA) {
		base_type : array ;
		data_type : bit ;
		bit_width : 24;
		bit_from : 23;
		bit_to : 0 ;
		downto : true ;
	}

	type (RAM256_ADDRESS) {
		base_type : array ;
		data_type : bit ;
		bit_width : 8;
		bit_from : 7;
		bit_to : 0 ;
		downto : true ;
	}
        type (RAM256_S) {
		base_type : array ;
		data_type : bit ;
		bit_width : 3;
		bit_from : 2;
		bit_to : 0 ;
		downto : true ;
	}


cell(RAM256) {
	area		 : 107307.100;
	dont_use	 : TRUE;
	dont_touch	 : TRUE;
      interface_timing : TRUE;
	memory() {
		type : ram;
		address_width : 8;
		word_width : 24;
	}

        bus(QA)   {
            bus_type : RAM256_DATA;
		direction : output;
		max_capacitance : 1.720;
                memory_read() {
			address : AA;
		}
                timing() {
                        related_pin :   "CLKA" ;
                        timing_type : rising_edge ;
                        timing_sense : non_unate;
                        
              cell_rise(RAM256_mem_out_delay_template) {
                        index_1("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        index_2("0.000, 0.060, 0.120, 0.240, 0.560, 1.120, 1.720");
                        values(\
			"0.639, 0.684, 0.727, 0.812, 1.038, 1.437, 1.859",\
			"0.643, 0.690, 0.733, 0.818, 1.044, 1.441, 1.865",\
			"0.634, 0.681, 0.723, 0.810, 1.036, 1.432, 1.856",\
			"0.603, 0.648, 0.692, 0.777, 1.004, 1.399, 1.824",\
			"0.522, 0.570, 0.611, 0.695, 0.925, 1.320, 1.745",\
			"0.422, 0.470, 0.515, 0.600, 0.830, 1.220, 1.651",\
			"0.349, 0.398, 0.438, 0.525, 0.750, 1.144, 1.573"\
                        );
                        }
                        rise_transition(RAM256_mem_out_slew_template) {
                        index_1("0.000, 0.060, 0.120, 0.240, 0.560, 1.120, 1.720");
			values("0.028, 0.116, 0.206, 0.392, 0.893, 1.761, 2.707");
                        }
                        
               cell_fall(RAM256_mem_out_delay_template) {
                        index_1("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        index_2("0.000, 0.060, 0.120, 0.240, 0.560, 1.120, 1.720");
                        values(\
			"0.624, 0.669, 0.705, 0.775, 0.964, 1.297, 1.648",\
			"0.628, 0.675, 0.711, 0.781, 0.970, 1.300, 1.654",\
			"0.619, 0.666, 0.702, 0.773, 0.961, 1.292, 1.645",\
			"0.588, 0.633, 0.670, 0.740, 0.930, 1.258, 1.613",\
			"0.507, 0.555, 0.589, 0.658, 0.850, 1.179, 1.532",\
			"0.407, 0.455, 0.493, 0.563, 0.755, 1.079, 1.439",\
			"0.334, 0.382, 0.416, 0.488, 0.675, 1.003, 1.362"\
                        );
                        }
                        
                        fall_transition(RAM256_mem_out_slew_template) {
                        index_1("0.000, 0.060, 0.120, 0.240, 0.560, 1.120, 1.720");
			values("0.035, 0.091, 0.148, 0.271, 0.611, 1.213, 1.864");
                        }
            }
        }
        pin(CLKA)   {
		direction : input;
		capacitance : 0.105;
                clock : true;
                max_transition : 1.500;
                timing() {
                        related_pin     : "CLKB" ;
			when : "!CENA & !CENB";
                        sdf_cond : "clkconfB_flag";
                        timing_type     : setup_rising ;
                        rise_constraint(RAM256_clk_setup_constraint_template) {
                        index_1("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        index_2("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        values(\
                         "1.336, 1.336, 1.336, 1.336, 1.336, 1.336, 1.336",\
                         "1.336, 1.336, 1.336, 1.336, 1.336, 1.336, 1.336",\
                         "1.336, 1.336, 1.336, 1.336, 1.336, 1.336, 1.336",\
                         "1.336, 1.336, 1.336, 1.336, 1.336, 1.336, 1.336",\
                         "1.336, 1.336, 1.336, 1.336, 1.336, 1.336, 1.336",\
                         "1.336, 1.336, 1.336, 1.336, 1.336, 1.336, 1.336",\
                         "1.336, 1.336, 1.336, 1.336, 1.336, 1.336, 1.336"\
                        );
                        }
                 }
                min_pulse_width_high  : 0.060 ;
                min_pulse_width_low   : 0.220 ;
                min_period            : 1.336 ;

                internal_power(){
                        when : "(!CENA )";
                        
                        rise_power(RAM256_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("84.139, 84.139")
                        }
                        
                        fall_power(RAM256_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
                 internal_power(){
                        when : "(CENA)";

                        rise_power(RAM256_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("1.298, 1.298")
                        }

                        fall_power(RAM256_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                        }
                }

        pin(CENA)   {
                direction : input;
                capacitance : 0.012;
                timing() {
                        related_pin     : CLKA;
                        timing_type     : setup_rising ;
                        
                        rise_constraint(RAM256_constraint_template) {
                        index_1("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        index_2("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        values(\
			"0.369, 0.377, 0.378, 0.382, 0.344, 0.315, 0.287",\
			"0.368, 0.376, 0.377, 0.371, 0.347, 0.315, 0.286",\
			"0.377, 0.387, 0.389, 0.389, 0.356, 0.321, 0.293",\
			"0.404, 0.415, 0.416, 0.413, 0.383, 0.345, 0.318",\
			"0.489, 0.495, 0.494, 0.486, 0.464, 0.427, 0.404",\
			"0.581, 0.588, 0.594, 0.584, 0.554, 0.521, 0.494",\
			"0.661, 0.665, 0.664, 0.660, 0.631, 0.593, 0.568"\
                        );
                        }
                        
                        fall_constraint(RAM256_constraint_template) {
                        index_1("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        index_2("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        values(\
			"0.391, 0.409, 0.441, 0.493, 0.587, 0.673, 0.738",\
			"0.396, 0.415, 0.446, 0.497, 0.592, 0.677, 0.743",\
			"0.419, 0.437, 0.469, 0.519, 0.614, 0.701, 0.768",\
			"0.466, 0.485, 0.515, 0.567, 0.660, 0.746, 0.813",\
			"0.549, 0.571, 0.599, 0.653, 0.745, 0.834, 0.900",\
			"0.623, 0.640, 0.671, 0.726, 0.820, 0.912, 0.977",\
			"0.674, 0.694, 0.723, 0.776, 0.869, 0.964, 1.027"\
                        );
                        }
                } 
                timing() {
                        related_pin     : CLKA;
                        timing_type     : hold_rising ;
                        
                        rise_constraint(RAM256_constraint_template) {
                        index_1("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        index_2("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        values(\
			"0.100, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100",\
			"0.100, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100",\
			"0.100, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100",\
			"0.100, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100",\
			"0.100, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100",\
			"0.100, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100",\
			"0.100, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100"\
                        );
                        }
                        
                        fall_constraint(RAM256_constraint_template) {
                        index_1("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        index_2("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        values(\
			"0.100, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100",\
			"0.100, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100",\
			"0.100, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100",\
			"0.100, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100",\
			"0.100, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100",\
			"0.100, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100",\
			"0.100, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100"\
                        );
                        }
               }
        }


        bus(AA)   {
                bus_type : RAM256_ADDRESS;
                direction : input;
                capacitance : 0.006;
                timing() {
                        related_pin     : CLKA;
			when : "!CENA";
                        sdf_cond : "CEA_flag";
                        timing_type     : setup_rising ;
                        
                        rise_constraint(RAM256_constraint_template) {
                        index_1("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        index_2("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        values(\
                        "0.485, 0.498, 0.511, 0.518, 0.510, 0.489, 0.470",\
			"0.482, 0.495, 0.505, 0.512, 0.505, 0.486, 0.466",\
			"0.490, 0.502, 0.513, 0.518, 0.512, 0.493, 0.473",\
			"0.517, 0.530, 0.540, 0.548, 0.539, 0.521, 0.503",\
			"0.591, 0.608, 0.617, 0.627, 0.615, 0.598, 0.578",\
			"0.682, 0.699, 0.708, 0.716, 0.707, 0.688, 0.672",\
			"0.761, 0.775, 0.791, 0.790, 0.783, 0.767, 0.745"\
			);
                        }
                        
                        fall_constraint(RAM256_constraint_template) {
                        index_1("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        index_2("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        values(\
                        "0.565, 0.586, 0.616, 0.672, 0.777, 0.867, 0.933",\
			"0.559, 0.580, 0.610, 0.669, 0.771, 0.863, 0.929",\
			"0.567, 0.588, 0.617, 0.677, 0.779, 0.871, 0.937",\
			"0.595, 0.615, 0.645, 0.704, 0.807, 0.900, 0.966",\
			"0.670, 0.693, 0.723, 0.780, 0.886, 0.975, 1.041",\
			"0.762, 0.784, 0.812, 0.872, 0.973, 1.068, 1.132",\
			"0.838, 0.861, 0.889, 0.948, 1.055, 1.142, 1.212"\
			);
                        }
                } 
                timing() {
                        related_pin     : CLKA;
			when : "!CENA";
                        sdf_cond : "CEA_flag";
                        timing_type     : hold_rising ;
                        
                        rise_constraint(RAM256_constraint_template) {
                        index_1("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        index_2("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        values(\
                        "0.389, 0.375, 0.365, 0.359, 0.367, 0.387, 0.410",\
			"0.397, 0.381, 0.371, 0.365, 0.373, 0.393, 0.413",\
			"0.387, 0.374, 0.363, 0.357, 0.365, 0.385, 0.405",\
			"0.359, 0.346, 0.336, 0.329, 0.337, 0.358, 0.377",\
			"0.282, 0.269, 0.260, 0.253, 0.260, 0.281, 0.300",\
			"0.189, 0.175, 0.171, 0.171, 0.171, 0.188, 0.207",\
			"0.171, 0.171, 0.171, 0.171, 0.171, 0.171, 0.171"\
			);
                        }
                        
                        fall_constraint(RAM256_constraint_template) {
                        index_1("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        index_2("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        values(\
                        "0.240, 0.219, 0.190, 0.135, 0.042, 0.033, 0.033",\
			"0.246, 0.225, 0.196, 0.141, 0.048, 0.033, 0.033",\
			"0.238, 0.217, 0.188, 0.133, 0.040, 0.033, 0.033",\
			"0.210, 0.190, 0.160, 0.105, 0.033, 0.033, 0.033",\
			"0.134, 0.112, 0.084, 0.033, 0.033, 0.033, 0.033",\
			"0.040, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033",\
			"0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033"\
			);
                        }
               }
                internal_power(){
                        when : "CENA";
                        
                        rise_power(RAM256_energy_template_sigslew) {
                        index_1 ("0.000, 1.000");
                        values ("2.101, 2.101")
                        }
                        
                        fall_power(RAM256_energy_template_sigslew) {
                        index_1 ("0.000, 1.000");
                        values ("2.101, 2.101")
                        }
                }
        }
        pin(CLKB)   {
		direction : input;
		capacitance : 0.105;
                clock : true;
                max_transition : 1.500;
                timing() {
                        related_pin     : "CLKA" ;
			when : "!CENA & !CENB";
                        sdf_cond : "clkconfA_flag";
                        timing_type     : setup_rising ;
                        rise_constraint(RAM256_clk_setup_constraint_template) {
                        index_1("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        index_2("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        values(\
                         "1.336, 1.336, 1.336, 1.336, 1.336, 1.336, 1.336",\
                         "1.336, 1.336, 1.336, 1.336, 1.336, 1.336, 1.336",\
                         "1.336, 1.336, 1.336, 1.336, 1.336, 1.336, 1.336",\
                         "1.336, 1.336, 1.336, 1.336, 1.336, 1.336, 1.336",\
                         "1.336, 1.336, 1.336, 1.336, 1.336, 1.336, 1.336",\
                         "1.336, 1.336, 1.336, 1.336, 1.336, 1.336, 1.336",\
                         "1.336, 1.336, 1.336, 1.336, 1.336, 1.336, 1.336"\
                        );
                        }
                 }
                 min_pulse_width_high : 0.060 ;
                 min_pulse_width_low  : 0.220 ;
                 min_period           : 1.336 ;

                 internal_power(){
                        when : "(!CENB) \
                                 ";
                        rise_power(RAM256_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("120.513, 120.513")
                        }
                        
                        fall_power(RAM256_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
                internal_power(){

                       when : "(CENB)";
                        
                        rise_power(RAM256_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("1.298, 1.298")
                        }
                        
                        fall_power(RAM256_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
        }
        pin(CENB)   {
                direction : input;
                capacitance : 0.012;
                timing() {
                        related_pin     : CLKB;
                        timing_type     : setup_rising ;
                        
                        rise_constraint(RAM256_constraint_template) {
                        index_1("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        index_2("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        values(\
			"0.369, 0.377, 0.378, 0.382, 0.344, 0.315, 0.287",\
			"0.368, 0.376, 0.377, 0.371, 0.347, 0.315, 0.286",\
			"0.377, 0.387, 0.389, 0.389, 0.356, 0.321, 0.293",\
			"0.404, 0.415, 0.416, 0.413, 0.383, 0.345, 0.318",\
			"0.489, 0.495, 0.494, 0.486, 0.464, 0.427, 0.404",\
			"0.581, 0.588, 0.594, 0.584, 0.554, 0.521, 0.494",\
			"0.661, 0.665, 0.664, 0.660, 0.631, 0.593, 0.568"\
                        );
                        }
                        
                        fall_constraint(RAM256_constraint_template) {
                        index_1("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        index_2("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        values(\
			"0.391, 0.409, 0.441, 0.493, 0.587, 0.673, 0.738",\
			"0.396, 0.415, 0.446, 0.497, 0.592, 0.677, 0.743",\
			"0.419, 0.437, 0.469, 0.519, 0.614, 0.701, 0.768",\
			"0.466, 0.485, 0.515, 0.567, 0.660, 0.746, 0.813",\
			"0.549, 0.571, 0.599, 0.653, 0.745, 0.834, 0.900",\
			"0.623, 0.640, 0.671, 0.726, 0.820, 0.912, 0.977",\
			"0.674, 0.694, 0.723, 0.776, 0.869, 0.964, 1.027"\
                        );
                        }
                } 
                timing() {
                        related_pin     : CLKB;
                        timing_type     : hold_rising ;
                        
                        rise_constraint(RAM256_constraint_template) {
                        index_1("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        index_2("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        values(\
			"0.100, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100",\
			"0.100, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100",\
			"0.100, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100",\
			"0.100, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100",\
			"0.100, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100",\
			"0.100, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100",\
			"0.100, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100"\
                        );
                        }
                        
                        fall_constraint(RAM256_constraint_template) {
                        index_1("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        index_2("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        values(\
			"0.100, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100",\
			"0.100, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100",\
			"0.100, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100",\
			"0.100, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100",\
			"0.100, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100",\
			"0.100, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100",\
			"0.100, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100"\
                        );
                        }
               }
        }
        bus(AB)   {
                bus_type : RAM256_ADDRESS;
                direction : input;
                capacitance : 0.006;
               timing() {
                        related_pin     : CLKB;
			when : "!CENB";
                        sdf_cond : "CEB_flag";
                        timing_type     : setup_rising ;
                        
                        rise_constraint(RAM256_constraint_template) {
                        index_1("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        index_2("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        values(\
                        "0.485, 0.498, 0.511, 0.518, 0.510, 0.489, 0.470",\
			"0.482, 0.495, 0.505, 0.512, 0.505, 0.486, 0.466",\
			"0.490, 0.502, 0.513, 0.518, 0.512, 0.493, 0.473",\
			"0.517, 0.530, 0.540, 0.548, 0.539, 0.521, 0.503",\
			"0.591, 0.608, 0.617, 0.627, 0.615, 0.598, 0.578",\
			"0.682, 0.699, 0.708, 0.716, 0.707, 0.688, 0.672",\
			"0.761, 0.775, 0.791, 0.790, 0.783, 0.767, 0.745"\
			);
                        }
                        
                        fall_constraint(RAM256_constraint_template) {
                        index_1("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        index_2("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        values(\
                        "0.565, 0.586, 0.616, 0.672, 0.777, 0.867, 0.933",\
			"0.559, 0.580, 0.610, 0.669, 0.771, 0.863, 0.929",\
			"0.567, 0.588, 0.617, 0.677, 0.779, 0.871, 0.937",\
			"0.595, 0.615, 0.645, 0.704, 0.807, 0.900, 0.966",\
			"0.670, 0.693, 0.723, 0.780, 0.886, 0.975, 1.041",\
			"0.762, 0.784, 0.812, 0.872, 0.973, 1.068, 1.132",\
			"0.838, 0.861, 0.889, 0.948, 1.055, 1.142, 1.212"\
			);
                        }
                } 
               timing() {
                        related_pin     : CLKB;
			when : "!CENB";
                        sdf_cond : "CEB_flag";
                        timing_type     : hold_rising ;
                        
                        rise_constraint(RAM256_constraint_template) {
                        index_1("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        index_2("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        values(\
                        "0.389, 0.375, 0.365, 0.359, 0.367, 0.387, 0.410",\
			"0.397, 0.381, 0.371, 0.365, 0.373, 0.393, 0.413",\
			"0.387, 0.374, 0.363, 0.357, 0.365, 0.385, 0.405",\
			"0.359, 0.346, 0.336, 0.329, 0.337, 0.358, 0.377",\
			"0.282, 0.269, 0.260, 0.253, 0.260, 0.281, 0.300",\
			"0.189, 0.175, 0.171, 0.171, 0.171, 0.188, 0.207",\
			"0.171, 0.171, 0.171, 0.171, 0.171, 0.171, 0.171"\
			);
                        }
                        
                        fall_constraint(RAM256_constraint_template) {
                        index_1("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        index_2("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        values(\
                        "0.240, 0.219, 0.190, 0.135, 0.042, 0.033, 0.033",\
			"0.246, 0.225, 0.196, 0.141, 0.048, 0.033, 0.033",\
			"0.238, 0.217, 0.188, 0.133, 0.040, 0.033, 0.033",\
			"0.210, 0.190, 0.160, 0.105, 0.033, 0.033, 0.033",\
			"0.134, 0.112, 0.084, 0.033, 0.033, 0.033, 0.033",\
			"0.040, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033",\
			"0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033"\
			);
                        }
               }
               internal_power(){
	
                        when : "CENB";
                        
                        rise_power(RAM256_energy_template_sigslew) {
                        index_1 ("0.000, 1.000");
                        values ("2.101, 2.101")
                        }
                        
                        fall_power(RAM256_energy_template_sigslew) {
                        index_1 ("0.000, 1.000");
                        values ("2.101, 2.101")
                        }
                }
        }
        bus(DB)   {
                bus_type : RAM256_DATA;
                memory_write() {
                        address : AB;
                        clocked_on : "CLKB";
                }
                direction : input;
                capacitance : 0.005;
                timing() {
                        related_pin     : CLKB;

			when : "!CENB";
                        sdf_cond : "CEB_flag";
                        timing_type     : setup_rising ;
                        
                        rise_constraint(RAM256_constraint_template) {
                        index_1("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        index_2("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        values(\
                        "0.380, 0.385, 0.387, 0.380, 0.355, 0.321, 0.294",\
			"0.378, 0.381, 0.381, 0.374, 0.350, 0.318, 0.291",\
			"0.386, 0.388, 0.389, 0.380, 0.357, 0.325, 0.298",\
			"0.413, 0.417, 0.416, 0.410, 0.383, 0.353, 0.328",\
			"0.486, 0.494, 0.492, 0.488, 0.458, 0.429, 0.402",\
			"0.576, 0.585, 0.583, 0.577, 0.551, 0.520, 0.496",\
			"0.657, 0.662, 0.666, 0.652, 0.626, 0.598, 0.568"\
			);
                        }
                        
                        fall_constraint(RAM256_constraint_template) {
                        index_1("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        index_2("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        values(\
                        "0.320, 0.339, 0.370, 0.419, 0.508, 0.589, 0.648",\
			"0.314, 0.335, 0.364, 0.414, 0.502, 0.583, 0.642",\
			"0.322, 0.343, 0.371, 0.421, 0.509, 0.591, 0.649",\
			"0.349, 0.370, 0.399, 0.450, 0.537, 0.619, 0.679",\
			"0.425, 0.448, 0.475, 0.529, 0.613, 0.698, 0.756",\
			"0.516, 0.540, 0.566, 0.618, 0.704, 0.788, 0.847",\
			"0.593, 0.616, 0.649, 0.693, 0.781, 0.866, 0.922"\
			);
                        }
                } 
                timing() {
                        related_pin     : CLKB;
			when : "!CENB";
                        sdf_cond : "CEB_flag";
                        timing_type     : hold_rising ;
                        
                        rise_constraint(RAM256_constraint_template) {
                        index_1("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        index_2("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        values(\
                        "0.096, 0.092, 0.092, 0.100, 0.126, 0.157, 0.186",\
			"0.105, 0.098, 0.099, 0.106, 0.130, 0.162, 0.190",\
			"0.094, 0.091, 0.091, 0.099, 0.122, 0.154, 0.182",\
			"0.067, 0.063, 0.063, 0.071, 0.095, 0.128, 0.153",\
			"0.000, 0.000, 0.000, 0.000, 0.018, 0.050, 0.076",\
			"0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000",\
			"0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000"\
			);
                        }
                        
                        fall_constraint(RAM256_constraint_template) {
                        index_1("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        index_2("0.020, 0.100, 0.200, 0.400, 0.800, 1.200, 1.500");
                        values(\
                        "0.165, 0.142, 0.114, 0.064, 0.000, 0.000, 0.000",\
			"0.171, 0.148, 0.120, 0.070, 0.000, 0.000, 0.000",\
			"0.162, 0.140, 0.112, 0.062, 0.000, 0.000, 0.000",\
			"0.135, 0.113, 0.085, 0.035, 0.000, 0.000, 0.000",\
			"0.058, 0.036, 0.009, 0.000, 0.000, 0.000, 0.000",\
			"0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000",\
			"0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000"\
			);
                        }
               }
        }

        cell_leakage_power : 0.261585 ;
        
}
}
